diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c b/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c
index 4c5b90e..125a2b0 100644
--- a/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c
@@ -223,10 +223,10 @@ static void xgbe_kr_mode(struct xgbe_prv_data *pdata)
 	xgbe_an73_enable_kr_training(pdata);
 
 	/* Set MAC to 10G speed */
-	pdata->hw_if.set_speed(pdata, SPEED_10000);
+	pdata->hw_if->set_speed(pdata, SPEED_10000);
 
 	/* Call PHY implementation support to complete rate change */
-	pdata->phy_if.phy_impl.set_mode(pdata, XGBE_MODE_KR);
+	pdata->phy_if->phy_impl.set_mode(pdata, XGBE_MODE_KR);
 }
 
 static void xgbe_kx_2500_mode(struct xgbe_prv_data *pdata)
@@ -235,10 +235,10 @@ static void xgbe_kx_2500_mode(struct xgbe_prv_data *pdata)
 	xgbe_an73_disable_kr_training(pdata);
 
 	/* Set MAC to 2.5G speed */
-	pdata->hw_if.set_speed(pdata, SPEED_2500);
+	pdata->hw_if->set_speed(pdata, SPEED_2500);
 
 	/* Call PHY implementation support to complete rate change */
-	pdata->phy_if.phy_impl.set_mode(pdata, XGBE_MODE_KX_2500);
+	pdata->phy_if->phy_impl.set_mode(pdata, XGBE_MODE_KX_2500);
 }
 
 static void xgbe_kx_1000_mode(struct xgbe_prv_data *pdata)
@@ -247,10 +247,10 @@ static void xgbe_kx_1000_mode(struct xgbe_prv_data *pdata)
 	xgbe_an73_disable_kr_training(pdata);
 
 	/* Set MAC to 1G speed */
-	pdata->hw_if.set_speed(pdata, SPEED_1000);
+	pdata->hw_if->set_speed(pdata, SPEED_1000);
 
 	/* Call PHY implementation support to complete rate change */
-	pdata->phy_if.phy_impl.set_mode(pdata, XGBE_MODE_KX_1000);
+	pdata->phy_if->phy_impl.set_mode(pdata, XGBE_MODE_KX_1000);
 }
 
 static void xgbe_sfi_mode(struct xgbe_prv_data *pdata)
@@ -263,10 +263,10 @@ static void xgbe_sfi_mode(struct xgbe_prv_data *pdata)
 	xgbe_an73_disable_kr_training(pdata);
 
 	/* Set MAC to 10G speed */
-	pdata->hw_if.set_speed(pdata, SPEED_10000);
+	pdata->hw_if->set_speed(pdata, SPEED_10000);
 
 	/* Call PHY implementation support to complete rate change */
-	pdata->phy_if.phy_impl.set_mode(pdata, XGBE_MODE_SFI);
+	pdata->phy_if->phy_impl.set_mode(pdata, XGBE_MODE_SFI);
 }
 
 static void xgbe_x_mode(struct xgbe_prv_data *pdata)
@@ -275,10 +275,10 @@ static void xgbe_x_mode(struct xgbe_prv_data *pdata)
 	xgbe_an73_disable_kr_training(pdata);
 
 	/* Set MAC to 1G speed */
-	pdata->hw_if.set_speed(pdata, SPEED_1000);
+	pdata->hw_if->set_speed(pdata, SPEED_1000);
 
 	/* Call PHY implementation support to complete rate change */
-	pdata->phy_if.phy_impl.set_mode(pdata, XGBE_MODE_X);
+	pdata->phy_if->phy_impl.set_mode(pdata, XGBE_MODE_X);
 }
 
 static void xgbe_sgmii_1000_mode(struct xgbe_prv_data *pdata)
@@ -287,10 +287,10 @@ static void xgbe_sgmii_1000_mode(struct xgbe_prv_data *pdata)
 	xgbe_an73_disable_kr_training(pdata);
 
 	/* Set MAC to 1G speed */
-	pdata->hw_if.set_speed(pdata, SPEED_1000);
+	pdata->hw_if->set_speed(pdata, SPEED_1000);
 
 	/* Call PHY implementation support to complete rate change */
-	pdata->phy_if.phy_impl.set_mode(pdata, XGBE_MODE_SGMII_1000);
+	pdata->phy_if->phy_impl.set_mode(pdata, XGBE_MODE_SGMII_1000);
 }
 
 static void xgbe_sgmii_100_mode(struct xgbe_prv_data *pdata)
@@ -299,15 +299,15 @@ static void xgbe_sgmii_100_mode(struct xgbe_prv_data *pdata)
 	xgbe_an73_disable_kr_training(pdata);
 
 	/* Set MAC to 1G speed */
-	pdata->hw_if.set_speed(pdata, SPEED_1000);
+	pdata->hw_if->set_speed(pdata, SPEED_1000);
 
 	/* Call PHY implementation support to complete rate change */
-	pdata->phy_if.phy_impl.set_mode(pdata, XGBE_MODE_SGMII_100);
+	pdata->phy_if->phy_impl.set_mode(pdata, XGBE_MODE_SGMII_100);
 }
 
 static enum xgbe_mode xgbe_cur_mode(struct xgbe_prv_data *pdata)
 {
-	return pdata->phy_if.phy_impl.cur_mode(pdata);
+	return pdata->phy_if->phy_impl.cur_mode(pdata);
 }
 
 static bool xgbe_in_kr_mode(struct xgbe_prv_data *pdata)
@@ -350,7 +350,7 @@ static void xgbe_change_mode(struct xgbe_prv_data *pdata,
 
 static void xgbe_switch_mode(struct xgbe_prv_data *pdata)
 {
-	xgbe_change_mode(pdata, pdata->phy_if.phy_impl.switch_mode(pdata));
+	xgbe_change_mode(pdata, pdata->phy_if->phy_impl.switch_mode(pdata));
 }
 
 static void xgbe_set_mode(struct xgbe_prv_data *pdata,
@@ -365,7 +365,7 @@ static void xgbe_set_mode(struct xgbe_prv_data *pdata,
 static bool xgbe_use_mode(struct xgbe_prv_data *pdata,
 			  enum xgbe_mode mode)
 {
-	return pdata->phy_if.phy_impl.use_mode(pdata, mode);
+	return pdata->phy_if->phy_impl.use_mode(pdata, mode);
 }
 
 static void xgbe_an37_set(struct xgbe_prv_data *pdata, bool enable,
@@ -497,15 +497,15 @@ static enum xgbe_an xgbe_an73_tx_training(struct xgbe_prv_data *pdata,
 	/* Start KR training */
 	reg = XMDIO_READ(pdata, MDIO_MMD_PMAPMD, MDIO_PMA_10GBR_PMD_CTRL);
 	if (reg & XGBE_KR_TRAINING_ENABLE) {
-		if (pdata->phy_if.phy_impl.kr_training_pre)
-			pdata->phy_if.phy_impl.kr_training_pre(pdata);
+		if (pdata->phy_if->phy_impl.kr_training_pre)
+			pdata->phy_if->phy_impl.kr_training_pre(pdata);
 
 		reg |= XGBE_KR_TRAINING_START;
 		XMDIO_WRITE(pdata, MDIO_MMD_PMAPMD, MDIO_PMA_10GBR_PMD_CTRL,
 			    reg);
 
-		if (pdata->phy_if.phy_impl.kr_training_post)
-			pdata->phy_if.phy_impl.kr_training_post(pdata);
+		if (pdata->phy_if->phy_impl.kr_training_post)
+			pdata->phy_if->phy_impl.kr_training_post(pdata);
 
 		netif_dbg(pdata, link, pdata->netdev,
 			  "KR training initiated\n");
@@ -921,7 +921,7 @@ static void xgbe_an37_init(struct xgbe_prv_data *pdata)
 {
 	unsigned int advertising, reg;
 
-	advertising = pdata->phy_if.phy_impl.an_advertising(pdata);
+	advertising = pdata->phy_if->phy_impl.an_advertising(pdata);
 
 	/* Set up Advertisement register */
 	reg = XMDIO_READ(pdata, MDIO_MMD_VEND2, MDIO_VEND2_AN_ADVERTISE);
@@ -967,7 +967,7 @@ static void xgbe_an73_init(struct xgbe_prv_data *pdata)
 {
 	unsigned int advertising, reg;
 
-	advertising = pdata->phy_if.phy_impl.an_advertising(pdata);
+	advertising = pdata->phy_if->phy_impl.an_advertising(pdata);
 
 	/* Set up Advertisement register 3 first */
 	reg = XMDIO_READ(pdata, MDIO_MMD_AN, MDIO_AN_ADVERTISE + 2);
@@ -1016,7 +1016,7 @@ static void xgbe_an73_init(struct xgbe_prv_data *pdata)
 static void xgbe_an_init(struct xgbe_prv_data *pdata)
 {
 	/* Set up advertisement registers based on current settings */
-	pdata->an_mode = pdata->phy_if.phy_impl.an_mode(pdata);
+	pdata->an_mode = pdata->phy_if->phy_impl.an_mode(pdata);
 	switch (pdata->an_mode) {
 	case XGBE_AN_MODE_CL73:
 	case XGBE_AN_MODE_CL73_REDRV:
@@ -1083,13 +1083,13 @@ static void xgbe_phy_adjust_link(struct xgbe_prv_data *pdata)
 
 		if (pdata->tx_pause != pdata->phy.tx_pause) {
 			new_state = 1;
-			pdata->hw_if.config_tx_flow_control(pdata);
+			pdata->hw_if->config_tx_flow_control(pdata);
 			pdata->tx_pause = pdata->phy.tx_pause;
 		}
 
 		if (pdata->rx_pause != pdata->phy.rx_pause) {
 			new_state = 1;
-			pdata->hw_if.config_rx_flow_control(pdata);
+			pdata->hw_if->config_rx_flow_control(pdata);
 			pdata->rx_pause = pdata->phy.rx_pause;
 		}
 
@@ -1115,7 +1115,7 @@ static void xgbe_phy_adjust_link(struct xgbe_prv_data *pdata)
 
 static bool xgbe_phy_valid_speed(struct xgbe_prv_data *pdata, int speed)
 {
-	return pdata->phy_if.phy_impl.valid_speed(pdata, speed);
+	return pdata->phy_if->phy_impl.valid_speed(pdata, speed);
 }
 
 static int xgbe_phy_config_fixed(struct xgbe_prv_data *pdata)
@@ -1128,7 +1128,7 @@ static int xgbe_phy_config_fixed(struct xgbe_prv_data *pdata)
 	xgbe_an_disable(pdata);
 
 	/* Set specified mode for specified speed */
-	mode = pdata->phy_if.phy_impl.get_mode(pdata, pdata->phy.speed);
+	mode = pdata->phy_if->phy_impl.get_mode(pdata, pdata->phy.speed);
 	switch (mode) {
 	case XGBE_MODE_KX_1000:
 	case XGBE_MODE_KX_2500:
@@ -1159,7 +1159,7 @@ static int __xgbe_phy_config_aneg(struct xgbe_prv_data *pdata)
 	set_bit(XGBE_LINK_INIT, &pdata->dev_state);
 	pdata->link_check = jiffies;
 
-	ret = pdata->phy_if.phy_impl.an_config(pdata);
+	ret = pdata->phy_if->phy_impl.an_config(pdata);
 	if (ret)
 		return ret;
 
@@ -1251,7 +1251,7 @@ static void xgbe_check_link_timeout(struct xgbe_prv_data *pdata)
 
 static enum xgbe_mode xgbe_phy_status_aneg(struct xgbe_prv_data *pdata)
 {
-	return pdata->phy_if.phy_impl.an_outcome(pdata);
+	return pdata->phy_if->phy_impl.an_outcome(pdata);
 }
 
 static void xgbe_phy_status_result(struct xgbe_prv_data *pdata)
@@ -1305,7 +1305,7 @@ static void xgbe_phy_status(struct xgbe_prv_data *pdata)
 
 	link_aneg = (pdata->phy.autoneg == AUTONEG_ENABLE);
 
-	pdata->phy.link = pdata->phy_if.phy_impl.link_status(pdata,
+	pdata->phy.link = pdata->phy_if->phy_impl.link_status(pdata,
 							     &an_restart);
 	if (an_restart) {
 		xgbe_phy_config_aneg(pdata);
@@ -1357,7 +1357,7 @@ static void xgbe_phy_stop(struct xgbe_prv_data *pdata)
 	if (pdata->dev_irq != pdata->an_irq)
 		devm_free_irq(pdata->dev, pdata->an_irq, pdata);
 
-	pdata->phy_if.phy_impl.stop(pdata);
+	pdata->phy_if->phy_impl.stop(pdata);
 
 	pdata->phy.link = 0;
 	netif_carrier_off(pdata->netdev);
@@ -1372,7 +1372,7 @@ static int xgbe_phy_start(struct xgbe_prv_data *pdata)
 
 	netif_dbg(pdata, link, pdata->netdev, "starting PHY\n");
 
-	ret = pdata->phy_if.phy_impl.start(pdata);
+	ret = pdata->phy_if->phy_impl.start(pdata);
 	if (ret)
 		return ret;
 
@@ -1422,7 +1422,7 @@ static int xgbe_phy_start(struct xgbe_prv_data *pdata)
 		devm_free_irq(pdata->dev, pdata->an_irq, pdata);
 
 err_stop:
-	pdata->phy_if.phy_impl.stop(pdata);
+	pdata->phy_if->phy_impl.stop(pdata);
 
 	return ret;
 }
@@ -1431,7 +1431,7 @@ static int xgbe_phy_reset(struct xgbe_prv_data *pdata)
 {
 	int ret;
 
-	ret = pdata->phy_if.phy_impl.reset(pdata);
+	ret = pdata->phy_if->phy_impl.reset(pdata);
 	if (ret)
 		return ret;
 
@@ -1505,7 +1505,7 @@ static void xgbe_phy_exit(struct xgbe_prv_data *pdata)
 {
 	xgbe_phy_stop(pdata);
 
-	pdata->phy_if.phy_impl.exit(pdata);
+	pdata->phy_if->phy_impl.exit(pdata);
 }
 
 static int xgbe_phy_init(struct xgbe_prv_data *pdata)
@@ -1524,7 +1524,7 @@ static int xgbe_phy_init(struct xgbe_prv_data *pdata)
 			       MDIO_PMA_10GBR_FECABLE_ERRABLE);
 
 	/* Setup the phy (including supported features) */
-	ret = pdata->phy_if.phy_impl.init(pdata);
+	ret = pdata->phy_if->phy_impl.init(pdata);
 	if (ret)
 		return ret;
 	pdata->phy.advertising = pdata->phy.supported;
@@ -1565,19 +1565,18 @@ static int xgbe_phy_init(struct xgbe_prv_data *pdata)
 	return 0;
 }
 
-void xgbe_init_function_ptrs_phy(struct xgbe_phy_if *phy_if)
-{
-	phy_if->phy_init        = xgbe_phy_init;
-	phy_if->phy_exit        = xgbe_phy_exit;
+const struct xgbe_phy_if default_xgbe_phy_if = {
+	.phy_init        = xgbe_phy_init,
+	.phy_exit        = xgbe_phy_exit;
 
-	phy_if->phy_reset       = xgbe_phy_reset;
-	phy_if->phy_start       = xgbe_phy_start;
-	phy_if->phy_stop        = xgbe_phy_stop;
+	.phy_reset       = xgbe_phy_reset;
+	.phy_start       = xgbe_phy_start;
+	.phy_stop        = xgbe_phy_stop;
 
-	phy_if->phy_status      = xgbe_phy_status;
-	phy_if->phy_config_aneg = xgbe_phy_config_aneg;
+	.phy_status      = xgbe_phy_status;
+	.phy_config_aneg = xgbe_phy_config_aneg;
 
-	phy_if->phy_valid_speed = xgbe_phy_valid_speed;
+	.phy_valid_speed = xgbe_phy_valid_speed;
 
-	phy_if->an_isr          = xgbe_an_combined_isr;
-}
+	.an_isr          = xgbe_an_combined_isr;
+};
